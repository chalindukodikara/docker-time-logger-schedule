apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: go-workflow-template
  namespace: choreo-ci-default-org
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: core.choreo.dev/noderole
            operator: In
            values:
            - workflow-runner
  arguments: {}
  entrypoint: build-workflow
  serviceAccountName: workflow-sa
  templates:
  - inputs: {}
    metadata: {}
    name: build-workflow
    outputs: {}
    steps:
    - - arguments: {}
        name: clone-step
        template: clone-step
    - - arguments:
          parameters:
          - name: git-revision
            value: '{{steps.clone-step.outputs.parameters.git-revision}}'
        name: build-step
        template: build-step
    - - arguments:
          parameters:
          - name: git-revision
            value: '{{steps.clone-step.outputs.parameters.git-revision}}'
        name: push-step
        template: push-step
  # - name: run-python
  #   container:
  #     image: python:3.10
  #     args:
  #       - python
  #       - -c
  #       - |
  #         import time
  #         print("Starting Python Script")
  #         time.sleep(3)
  #         print("Done!")
  - container:
      args:
      - |-
        set -e
        git clone --single-branch --branch main --depth 1 https://github.com/wso2/choreo-samples /mnt/vol/source
        cd /mnt/vol/source
        COMMIT_SHA=$(git rev-parse HEAD)
        echo -n "$COMMIT_SHA" | cut -c1-8 > /tmp/git-revision.txt
      command:
      - sh
      - -c
      image: alpine/git
      name: ""
      resources: {}
      volumeMounts:
      - mountPath: /mnt/vol
        name: workspace
    inputs: {}
    metadata:
      labels:
        step: clone-step
        workflow: reading-list-service-build-01
    name: clone-step
    outputs:
      parameters:
      - name: git-revision
        valueFrom:
          path: /tmp/git-revision.txt
  - container:
      args:
      - |-
        set -e

        mkdir -p /etc/containers
        cat <<EOF > /etc/containers/storage.conf
        [storage]
        driver = "overlay"
        runroot = "/run/containers/storage"
        graphroot = "/var/lib/containers/storage"
        [storage.options.overlay]
        mount_program = "/usr/bin/fuse-overlayfs"
        EOF
        podman system service --time=0 &
        until podman info --format '{{.Host.RemoteSocket.Exists}}' 2>/dev/null | grep -q "true"; do
          sleep 1
        done

        if [[ ! -f "/shared/podman/cache/google-builder.tar" ]]; then
          podman pull gcr.io/buildpacks/builder:google-22
          podman save -o /shared/podman/cache/google-builder.tar gcr.io/buildpacks/builder:google-22
        else
          if ! podman load -i /shared/podman/cache/google-builder.tar; then
            podman pull gcr.io/buildpacks/builder:google-22
            podman save -o /shared/podman/cache/google-builder.tar gcr.io/buildpacks/builder:google-22
          fi
        fi


        if [[ ! -f "/shared/podman/cache/google-run.tar" ]]; then
          podman pull gcr.io/buildpacks/google-22/run:latest
          podman save -o /shared/podman/cache/google-run.tar gcr.io/buildpacks/google-22/run:latest
        else
          if ! podman load -i /shared/podman/cache/google-run.tar; then
            podman pull gcr.io/buildpacks/google-22/run:latest
            podman save -o /shared/podman/cache/google-run.tar gcr.io/buildpacks/google-22/run:latest
          fi
        fi

        /usr/local/bin/pack build default-org-default-project-reading-list-service-08512f5d:reading-list-service-main-33d882c8-{{inputs.parameters.git-revision}} --builder=gcr.io/buildpacks/builder:google-22 \
        --docker-host=inherit --path=/mnt/vol/source/go-reading-list-rest-api --pull-policy if-not-present --env GOOGLE_GO_VERSION="1.x"

        podman save -o /mnt/vol/app-image.tar default-org-default-project-reading-list-service-08512f5d:reading-list-service-main-33d882c8-{{inputs.parameters.git-revision}}
      command:
      - sh
      - -c
      image: ghcr.io/openchoreo/podman-runner:v1.0
      name: ""
      env:
        - name: CGO_ENABLED
          value: "0"
        - name: CHALINDU
          value: "98 kodi"
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /mnt/vol
        name: workspace
      - mountPath: /shared/podman/cache
        name: podman-cache
    inputs:
      parameters:
      - name: git-revision
    metadata:
      labels:
        step: build-step
        workflow: reading-list-service-build-01
    name: build-step
    outputs: {}
  - container:
      args:
      - |-
        set -e
        GIT_REVISION={{inputs.parameters.git-revision}}
        mkdir -p /etc/containers
        cat <<EOF > /etc/containers/storage.conf
        [storage]
        driver = "overlay"
        runroot = "/run/containers/storage"
        graphroot = "/var/lib/containers/storage"
        [storage.options.overlay]
        mount_program = "/usr/bin/fuse-overlayfs"
        EOF

        podman load -i /mnt/vol/app-image.tar
        podman tag default-org-default-project-reading-list-service-08512f5d:reading-list-service-main-33d882c8-$GIT_REVISION registry.choreo-system:5000/default-org-default-project-reading-list-service-08512f5d:reading-list-service-main-33d882c8-$GIT_REVISION
        podman push --tls-verify=false registry.choreo-system:5000/default-org-default-project-reading-list-service-08512f5d:reading-list-service-main-33d882c8-$GIT_REVISION

        podman rmi default-org-default-project-reading-list-service-08512f5d:reading-list-service-main-33d882c8-$GIT_REVISION -f
        echo -n "default-org-default-project-reading-list-service-08512f5d:reading-list-service-main-33d882c8-$GIT_REVISION" > /tmp/image.txt
      command:
      - sh
      - -c
      image: ghcr.io/openchoreo/podman-runner:v1.0
      name: ""
      resources: {}
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /mnt/vol
        name: workspace
    inputs:
      parameters:
      - name: git-revision
    metadata:
      labels:
        step: push-step
        workflow: reading-list-service-build-01
    name: push-step
    outputs:
      parameters:
      - name: image
        valueFrom:
          path: /tmp/image.txt
  ttlStrategy:
    secondsAfterFailure: 3600
    secondsAfterSuccess: 3600
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: workspace
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
    status: {}
  volumes:
  - hostPath:
      path: /shared/podman/cache
      type: DirectoryOrCreate
    name: podman-cache